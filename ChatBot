// Important libraries 
const functions = require('firebase-functions');
const { WebhookClient } = require('dialogflow-fulfillment');
const fetch = require('node-fetch');

// Export the main Cloud Function that handles Dialogflow webhook requests
exports.dialogflowFirebaseFulfillment = functions.https.onRequest(async (request, response) => {

  // Create a Dialogflow agent to manage the conversation flow
  const agent = new WebhookClient({ request, response });

  //Handler for "GetNextEvent" intent in dialogflow
  async function nextEventHandler(agent) {
    try {

  // Fetches the data from an external API (next_event.php which returns the next event) 
      const res = await fetch('https://mi-linux.wlv.ac.uk/~2337117/next_event.php');

  // Read the raw response as text for debugging and parse it into JSON object 
      const text = await res.text(); // read as raw text for now
      console.log('Raw response:', text);
      const event = JSON.parse(text);

  // Format start_time (Column in database) into readable information
      const date = new Date(event.start_time);
      const options = { 
        weekday: 'long', 
        year: 'numeric', 
        month: 'long', 
        day: 'numeric', 
        hour: 'numeric', 
        minute: '2-digit', 
        hour12: true 
      };
      const formatted = date.toLocaleString('en-UK', options);


   // Uses the fetched data and gives below respond to the user through Dialogflow
      agent.add(`The next event is "${event.title}", and it starts on ${formatted}.`);
    } catch (error) {
  // Error log for debugging
      console.error('FETCH ERROR:', error);
      agent.add(`Sorry, something went wrong. Error: ${error.message}`);
    }
  }

 // Associate the 'GetNextEvent' intent with the nextEventHandler function
  const intentMap = new Map();
  intentMap.set('GetNextEvent', nextEventHandler);
  agent.handleRequest(intentMap);
});
